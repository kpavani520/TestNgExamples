<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="1" total="14" passed="12">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="164" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
    <groups>
      <group name="Smoke">
        <method signature="Test2.example1()[pri:0, instance:day1.Test2@ea1a8d5]" name="example1" class="day1.Test2"/>
        <method signature="CarLoan.webLogin()[pri:0, instance:day1.CarLoan@6b9651f3]" name="webLogin" class="day1.CarLoan"/>
        <method signature="HomeLoan.MobileRecieveBill()[pri:0, instance:day1.HomeLoan@60285225]" name="MobileRecieveBill" class="day1.HomeLoan"/>
      </group> <!-- Smoke -->
    </groups>
    <test name="CarLoans" duration-ms="65" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
      <class name="day1.CarLoan">
        <test-method status="PASS" signature="preRequest()[pri:0, instance:day1.CarLoan@6b9651f3]" name="preRequest" is-config="true" duration-ms="3" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequest -->
        <test-method status="PASS" signature="ApiLogin()[pri:0, instance:day1.CarLoan@6b9651f3]" name="ApiLogin" duration-ms="7" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ApiLogin -->
        <test-method status="PASS" signature="MobileLogin(java.lang.String,java.lang.String)[pri:0, instance:day1.CarLoan@6b9651f3]" name="MobileLogin" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[pavani1234]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileLogin -->
        <test-method status="PASS" signature="webLogin()[pri:0, instance:day1.CarLoan@6b9651f3]" name="webLogin" duration-ms="3" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webLogin -->
      </class> <!-- day1.CarLoan -->
    </test> <!-- CarLoans -->
    <test name="Test" duration-ms="76" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
      <class name="day1.Test1">
        <test-method status="PASS" signature="Method2(java.lang.String)[pri:0, instance:day1.Test1@305fd85d]" name="Method2" duration-ms="8" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[qaclickacademy]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Method2 -->
        <test-method status="PASS" signature="lastPriority()[pri:0, instance:day1.Test1@305fd85d]" name="lastPriority" is-config="true" duration-ms="0" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastPriority -->
      </class> <!-- day1.Test1 -->
      <class name="day1.Test2">
        <test-method status="PASS" signature="preRequest()[pri:0, instance:day1.Test2@ea1a8d5]" name="preRequest" is-config="true" duration-ms="6" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- preRequest -->
        <test-method status="PASS" signature="bfMethod()[pri:0, instance:day1.Test2@ea1a8d5]" name="bfMethod" is-config="true" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod -->
        <test-method status="FAIL" signature="example()[pri:0, instance:day1.Test2@ea1a8d5]" name="example" duration-ms="6" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:99)
at org.testng.Assert.failNotEquals(Assert.java:1037)
at org.testng.Assert.assertTrue(Assert.java:45)
at org.testng.Assert.assertTrue(Assert.java:55)
at day1.Test2.example(Test2.java:14)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:598)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:824)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1249)
at org.testng.TestRunner.privateRun(TestRunner.java:794)
at org.testng.TestRunner.run(TestRunner.java:596)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:377)
at org.testng.SuiteRunner.access$000(SuiteRunner.java:28)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:418)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.util.concurrent.FutureTask.run(FutureTask.java:266)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:745)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- example -->
        <test-method status="PASS" signature="afMethod()[pri:0, instance:day1.Test2@ea1a8d5]" name="afMethod" is-config="true" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afMethod -->
        <test-method status="PASS" signature="bfMethod()[pri:0, instance:day1.Test2@ea1a8d5]" name="bfMethod" is-config="true" duration-ms="2" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfMethod -->
        <test-method status="PASS" signature="example1()[pri:0, instance:day1.Test2@ea1a8d5]" name="example1" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- example1 -->
        <test-method status="PASS" signature="afMethod()[pri:0, instance:day1.Test2@ea1a8d5]" name="afMethod" is-config="true" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afMethod -->
      </class> <!-- day1.Test2 -->
    </test> <!-- Test -->
    <test name="HomeLoans" duration-ms="21" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
      <class name="day1.HomeLoan">
        <test-method status="PASS" signature="MobileHomeLoan()[pri:0, instance:day1.HomeLoan@60285225]" name="MobileHomeLoan" duration-ms="2" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileHomeLoan -->
        <test-method status="PASS" signature="MobileRecieveBill()[pri:0, instance:day1.HomeLoan@60285225]" name="MobileRecieveBill" duration-ms="2" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileRecieveBill -->
        <test-method status="PASS" signature="MobileBillPay()[pri:0, instance:day1.HomeLoan@60285225]" name="MobileBillPay" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileBillPay -->
        <test-method status="PASS" signature="WebHomeLoan()[pri:0, instance:day1.HomeLoan@60285225]" name="WebHomeLoan" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" depends-on-methods="day1.HomeLoan.MobileHomeLoan" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- WebHomeLoan -->
      </class> <!-- day1.HomeLoan -->
    </test> <!-- HomeLoans -->
    <test name="dataprovide" duration-ms="16" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
      <class name="day1.DataProviderForTests">
        <test-method status="PASS" signature="parentMethod(java.lang.String,java.lang.String)[pri:0, instance:day1.DataProviderForTests@4923ab24]" name="parentMethod" duration-ms="1" started-at="2021-11-02T11:44:05 PDT" data-provider="childclass" finished-at="2021-11-02T11:44:05 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[firstusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[firstpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parentMethod -->
        <test-method status="PASS" signature="parentMethod(java.lang.String,java.lang.String)[pri:0, instance:day1.DataProviderForTests@4923ab24]" name="parentMethod" duration-ms="2" started-at="2021-11-02T11:44:05 PDT" data-provider="childclass" finished-at="2021-11-02T11:44:05 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[secondusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[secondpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parentMethod -->
        <test-method status="PASS" signature="parentMethod(java.lang.String,java.lang.String)[pri:0, instance:day1.DataProviderForTests@4923ab24]" name="parentMethod" duration-ms="2" started-at="2021-11-02T11:44:05 PDT" data-provider="childclass" finished-at="2021-11-02T11:44:05 PDT">
          <params>
            <param index="0">
              <value>
                <![CDATA[thirdusername]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[thirdpassword]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- parentMethod -->
      </class> <!-- day1.DataProviderForTests -->
      <class name="day1.HomeLoan">
        <test-method status="PASS" signature="bfSuit()[pri:0, instance:day1.HomeLoan@60285225]" name="bfSuit" is-config="true" duration-ms="10" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- bfSuit -->
      </class> <!-- day1.HomeLoan -->
      <class name="day1.Test1">
        <test-method status="PASS" signature="afSuite()[pri:0, instance:day1.Test1@305fd85d]" name="afSuite" is-config="true" duration-ms="0" started-at="2021-11-02T11:44:05 PDT" finished-at="2021-11-02T11:44:05 PDT">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- day1.Test1 -->
    </test> <!-- dataprovide -->
  </suite> <!-- Suite -->
</testng-results>
